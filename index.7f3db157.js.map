{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["var $09e991522ca7e64e$exports = {};\n\"use strict\";\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$fieldRows = document.querySelectorAll(\".field-row\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$size = 4;\nlet $09e991522ca7e64e$var$score = 0;\nlet $09e991522ca7e64e$var$isWin = false;\nlet $09e991522ca7e64e$var$newGameField;\nlet $09e991522ca7e64e$var$gameField = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nconst $09e991522ca7e64e$var$move = (e)=>{\n    $09e991522ca7e64e$var$newGameField = [\n        ...$09e991522ca7e64e$var$gameField\n    ];\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$left($09e991522ca7e64e$var$newGameField);\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$right($09e991522ca7e64e$var$newGameField);\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$down($09e991522ca7e64e$var$newGameField);\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$up($09e991522ca7e64e$var$newGameField);\n            break;\n        default:\n            return;\n    }\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++){\n        for(let col = 0; col < $09e991522ca7e64e$var$size; col++)if ($09e991522ca7e64e$var$newGameField[row][col] !== $09e991522ca7e64e$var$gameField[row][col]) {\n            $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$newGameField;\n            $09e991522ca7e64e$var$addNumber();\n            $09e991522ca7e64e$var$render();\n        }\n    }\n    if ($09e991522ca7e64e$var$isWin) $09e991522ca7e64e$var$messageWin.classList.remove(\"hidden\");\n    if (!$09e991522ca7e64e$var$isPosibleToMove()) {\n        $09e991522ca7e64e$var$messageLose.classList.remove(\"hidden\");\n        document.removeEventListener(\"keydown\", $09e991522ca7e64e$var$move);\n    }\n};\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    document.addEventListener(\"keydown\", $09e991522ca7e64e$var$move);\n    if ($09e991522ca7e64e$var$button.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$button.classList.replace(\"start\", \"restart\");\n        $09e991522ca7e64e$var$button.innerText = \"Restart\";\n        $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n    } else {\n        $09e991522ca7e64e$var$isWin = false;\n        $09e991522ca7e64e$var$reset();\n    }\n    $09e991522ca7e64e$var$addNumber();\n    $09e991522ca7e64e$var$addNumber();\n    $09e991522ca7e64e$var$render();\n});\nfunction $09e991522ca7e64e$var$checkRows() {\n    let hasDuplicates = false;\n    $09e991522ca7e64e$var$newGameField.forEach((row)=>{\n        if (row.some((cell, index)=>cell === 0 || cell === row[index + 1])) hasDuplicates = true;\n    });\n    return hasDuplicates;\n}\nfunction $09e991522ca7e64e$var$checkColumns() {\n    let hasDuplicates = false;\n    $09e991522ca7e64e$var$newGameField.forEach((row)=>{\n        row.forEach((cell, index)=>{\n            if (cell === row[index + 1]) hasDuplicates = true;\n        });\n    });\n    return hasDuplicates;\n}\nfunction $09e991522ca7e64e$var$reverseRows() {\n    $09e991522ca7e64e$var$newGameField.forEach((row)=>row.reverse());\n}\nfunction $09e991522ca7e64e$var$transposeGameField() {\n    $09e991522ca7e64e$var$newGameField = $09e991522ca7e64e$var$newGameField[0].map((x, colIndex)=>$09e991522ca7e64e$var$newGameField.map((row)=>row[colIndex]));\n}\nfunction $09e991522ca7e64e$var$findEmptyCell() {\n    const emptyCells = [];\n    $09e991522ca7e64e$var$gameField.forEach((row, rowIndex)=>{\n        row.forEach((cell, columnIndex)=>{\n            if (cell === 0) emptyCells.push([\n                rowIndex,\n                columnIndex\n            ]);\n        });\n    });\n    return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\nfunction $09e991522ca7e64e$var$isPosibleToMove() {\n    if ($09e991522ca7e64e$var$checkRows()) return true;\n    $09e991522ca7e64e$var$transposeGameField();\n    return $09e991522ca7e64e$var$checkColumns();\n}\nconst $09e991522ca7e64e$var$addNumber = ()=>{\n    const [randomX, randomY] = $09e991522ca7e64e$var$findEmptyCell();\n    $09e991522ca7e64e$var$gameField[randomX][randomY] = Math.random() < 0.9 ? 2 : 4;\n};\nconst $09e991522ca7e64e$var$left = ()=>{\n    if (!$09e991522ca7e64e$var$checkRows) return;\n    $09e991522ca7e64e$var$newGameField = $09e991522ca7e64e$var$newGameField.map((row)=>{\n        const newRow = row.filter((cell)=>cell !== 0);\n        newRow.forEach((cell, index)=>{\n            if (cell === newRow[index + 1]) {\n                newRow[index] *= 2;\n                newRow.splice(index + 1, 1);\n                $09e991522ca7e64e$var$score += newRow[index];\n                if (newRow[index] === 2048) $09e991522ca7e64e$var$isWin = true;\n            }\n        });\n        return newRow.concat(Array($09e991522ca7e64e$var$size - newRow.length).fill(0));\n    });\n};\nconst $09e991522ca7e64e$var$right = ()=>{\n    if (!$09e991522ca7e64e$var$checkRows) return;\n    $09e991522ca7e64e$var$reverseRows();\n    $09e991522ca7e64e$var$left();\n    $09e991522ca7e64e$var$reverseRows();\n};\nconst $09e991522ca7e64e$var$down = ()=>{\n    $09e991522ca7e64e$var$transposeGameField();\n    $09e991522ca7e64e$var$right();\n    $09e991522ca7e64e$var$transposeGameField();\n};\nconst $09e991522ca7e64e$var$up = ()=>{\n    $09e991522ca7e64e$var$transposeGameField();\n    $09e991522ca7e64e$var$left();\n    $09e991522ca7e64e$var$transposeGameField();\n};\nconst $09e991522ca7e64e$var$render = ()=>{\n    $09e991522ca7e64e$var$gameField.forEach((row, rowIndex)=>{\n        row.forEach((cell, colIndex)=>{\n            const elem = $09e991522ca7e64e$var$fieldRows[rowIndex].children[colIndex];\n            if (cell === 0) {\n                elem.textContent = \"\";\n                elem.className = \"field-cell\";\n            } else {\n                elem.textContent = cell;\n                elem.className = `field-cell field-cell--${cell}`;\n            }\n        });\n    });\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$score;\n};\nconst $09e991522ca7e64e$var$reset = ()=>{\n    $09e991522ca7e64e$var$score = 0;\n    $09e991522ca7e64e$var$gameField = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    if (!$09e991522ca7e64e$var$messageLose.classList.contains(\"hidden\")) $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n    if (!$09e991522ca7e64e$var$messageWin.classList.contains(\"hidden\")) $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n};\n\n\n//# sourceMappingURL=index.7f3db157.js.map\n","'use strict';\n\nconst button = document.querySelector('.button');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\n\nconst size = 4;\nlet score = 0;\nlet isWin = false;\nlet newGameField;\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst move = (e) => {\n  newGameField = [...gameField];\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      left(newGameField);\n      break;\n\n    case 'ArrowRight':\n      right(newGameField);\n      break;\n\n    case 'ArrowDown':\n      down(newGameField);\n      break;\n\n    case 'ArrowUp':\n      up(newGameField);\n      break;\n\n    default:\n      return;\n  }\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      if (newGameField[row][col] !== gameField[row][col]) {\n        gameField = newGameField;\n        addNumber();\n        render();\n      }\n    }\n  }\n\n  if (isWin) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (!isPosibleToMove()) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', move);\n  }\n};\n\nbutton.addEventListener('click', () => {\n  document.addEventListener('keydown', move);\n\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    isWin = false;\n    reset();\n  }\n\n  addNumber();\n  addNumber();\n  render();\n});\n\nfunction checkRows() {\n  let hasDuplicates = false;\n\n  newGameField.forEach((row) => {\n    if (row.some((cell, index) => cell === 0 || cell === row[index + 1])) {\n      hasDuplicates = true;\n    }\n  });\n\n  return hasDuplicates;\n}\n\nfunction checkColumns() {\n  let hasDuplicates = false;\n\n  newGameField.forEach((row) => {\n    row.forEach((cell, index) => {\n      if (cell === row[index + 1]) {\n        hasDuplicates = true;\n      }\n    });\n  });\n\n  return hasDuplicates;\n}\n\nfunction reverseRows() {\n  newGameField.forEach((row) => row.reverse());\n}\n\nfunction transposeGameField() {\n  newGameField = newGameField[0].map((x, colIndex) =>\n    newGameField.map((row) => row[colIndex]),\n  );\n}\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  gameField.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\n\nfunction isPosibleToMove() {\n  if (checkRows()) {\n    return true;\n  }\n\n  transposeGameField();\n\n  return checkColumns();\n}\n\nconst addNumber = () => {\n  const [randomX, randomY] = findEmptyCell();\n\n  gameField[randomX][randomY] = Math.random() < 0.9 ? 2 : 4;\n};\n\nconst left = () => {\n  if (!checkRows) {\n    return;\n  }\n\n  newGameField = newGameField.map((row) => {\n    const newRow = row.filter((cell) => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWin = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(size - newRow.length).fill(0));\n  });\n};\n\nconst right = () => {\n  if (!checkRows) {\n    return;\n  }\n\n  reverseRows();\n  left();\n  reverseRows();\n};\n\nconst down = () => {\n  transposeGameField();\n  right();\n  transposeGameField();\n};\n\nconst up = () => {\n  transposeGameField();\n  left();\n  transposeGameField();\n};\n\nconst render = () => {\n  gameField.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const elem = fieldRows[rowIndex].children[colIndex];\n\n      if (cell === 0) {\n        elem.textContent = '';\n        elem.className = 'field-cell';\n      } else {\n        elem.textContent = cell;\n        elem.className = `field-cell field-cell--${cell}`;\n      }\n    });\n  });\n\n  gameScore.textContent = score;\n};\n\nconst reset = () => {\n  score = 0;\n\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  if (!messageLose.classList.contains('hidden')) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (!messageWin.classList.contains('hidden')) {\n    messageWin.classList.add('hidden');\n  }\n};\n"],"names":["$09e991522ca7e64e$var$newGameField","$09e991522ca7e64e$var$button","document","querySelector","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$fieldRows","querySelectorAll","$09e991522ca7e64e$var$gameScore","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$isWin","$09e991522ca7e64e$var$gameField","$09e991522ca7e64e$var$move","e","hasDuplicates","key","$09e991522ca7e64e$var$left","$09e991522ca7e64e$var$right","$09e991522ca7e64e$var$down","$09e991522ca7e64e$var$up","row","col","$09e991522ca7e64e$var$addNumber","$09e991522ca7e64e$var$render","classList","remove","$09e991522ca7e64e$var$checkRows","$09e991522ca7e64e$var$transposeGameField","forEach","cell","index","removeEventListener","some","$09e991522ca7e64e$var$reverseRows","reverse","map","x","colIndex","addEventListener","contains","replace","innerText","add","$09e991522ca7e64e$var$reset","randomX","randomY","$09e991522ca7e64e$var$findEmptyCell","emptyCells","rowIndex","columnIndex","push","Math","floor","random","length","newRow","filter","splice","concat","Array","$09e991522ca7e64e$var$size","fill","elem","children","textContent","className"],"version":3,"file":"index.7f3db157.js.map"}